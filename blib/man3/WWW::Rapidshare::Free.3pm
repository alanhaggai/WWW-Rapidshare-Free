.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WWW::Rapidshare::Free 3"
.TH WWW::Rapidshare::Free 3 "2008-12-23" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
WWW::Rapidshare::Free \- Automates downloading from Rapidshare.com and checking links for free users
.SH "VERSION"
.IX Header "VERSION"
Version 0.01
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    use strict;
\&    use warnings;
\&    use WWW::Rapidshare::Free qw( verbose add_links check_links 
\&      download connection );
\&
\&    # We are going to let the module be verbose and display a delay metre and 
\&    # progress bar.
\&    verbose(1);
\&
\&    my @links = add_links(
\&        qw{
\&          http://rapidshare.com/files/175658683/perl\-51.zip
\&          http://rapidshare.com/files/175662062/perl\-52.zip
\&          }
\&    );
\&
\&    print "Added links:\en";
\&    map print("\et$_\en"), @links;
\&
\&    my @erroneous_links = check_links;
\&    map {
\&        my ( $uri, $error ) = @{$_};
\&        print "URI: $uri\enError: $error\en";
\&    } @erroneous_links;
\&
\&    download(
\&        properties    => \e&properties,
\&        file_complete => \e&file_complete,
\&    );
\&
\&    sub properties {
\&        my ( $file_name, $file_size ) = @_;
\&        print "Filename: $file_name\enFile size: $file_size bytes\en";
\&    }
\&
\&    sub file_complete {
\&        # Let us restart the modem. I have updated my /etc/sudoers file to allow me
\&        # to execute sudo pppoe\-start and sudo pppoe\-stop without a password.
\&        connection(
\&            connect    => \*(Aqsudo pppoe\-start\*(Aq,
\&            disconnect => \*(Aqsudo pppoe\-stop\*(Aq,
\&        );
\&    }
.Ve
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
By default, the module does not export any function. An export tag \f(CW\*(C`all\*(C'\fR has 
been defined to export all functions. The following functions can be exported:
.IP "\(bu" 4
add_links
.Sp
Adds links to be downloaded and returns the added links as an array. Accepts an 
array of values as argument. Ignores commented links (links that start with a 
\&\f(CW\*(C`#\*(C'\fR) and invalid links.
.IP "\(bu" 4
add_links_from_file
.Sp
Adds links from a file which is given as an argument and returns the added 
links as an array. Ignores commented links (links that start with a \f(CW\*(C`#\*(C'\fR) and 
invalid links.
.IP "\(bu" 4
links
.Sp
Returns current links which have been added by \f(CW\*(C`add_links\*(C'\fR or 
\&\f(CW\*(C`add_links_from_file\*(C'\fR.
.IP "\(bu" 4
clear_links
.Sp
Clears current links and returns them as an array.
.IP "\(bu" 4
check_links
.Sp
Checks if the links are alive or not. Returns an array of array references if 
there are dead links. The latter arrays are of the form 
\&\f(CW\*(C`[ link, error message ]\*(C'\fR. If all links are alive, returns false. Additionally
it also removes the dead links.
.Sp
.Vb 5
\&    my @erroneous_links = check_links;
\&    map {
\&        my ( $uri, $error ) = @{$_};
\&        print "URI: $uri\enError: $error\en";
\&    } @erroneous_links;
.Ve
.IP "\(bu" 4
download
.Sp
Downloads files off valid links. Accepts a hash with a maximum of four keys 
having callbacks as their values. The hash should be of the form:
.Sp
.Vb 6
\&    (
\&        delay          => \e&delay_callback,
\&        properties     => \e&properties_callback,
\&        progress       => \e&progress_callback,
\&        file_complete  => \e&file_complete
\&    )
.Ve
.Sp
Callbacks are passed values as follows:
.RS 4
.IP "\(bu" 4
\&\f(CW\*(C`delay\*(C'\fR
.Sp
\&\f(CW\*(C`delay\*(C'\fR callback is passed the number of seconds until download begins. It is 
called every second until the delay is zero. Delay is decremented each time the 
callback is executed.
.IP "\(bu" 4
\&\f(CW\*(C`properties\*(C'\fR
.Sp
\&\f(CW\*(C`properties\*(C'\fR is passed the file name and file size as two arguments.
.IP "\(bu" 4
\&\f(CW\*(C`progress\*(C'\fR
.Sp
Sole argument is the number of bytes of the current file downloaded so far. This
callback is executed every instant in which data is written to the file which is
being downloaded.
.IP "\(bu" 4
\&\f(CW\*(C`file_complete\*(C'\fR
.Sp
This callback passes control after each file is downloaded. 
Disconnection/connection establishment or reconnection is possible by invoking 
\&\f(CW\*(C`connection\*(C'\fR.
.RE
.RS 4
.RE
.IP "\(bu" 4
verbose
.Sp
Controls the output verbosity. Pass it a false value such as 0 or '' (empty 
string) to turn off the delay metre and progress bar. Everything else turns on 
verbosity. Verbosity is true by default.
.IP "\(bu" 4
connection
.Sp
Most useful within the callback of \f(CW\*(C`download\*(C'\fR pertaining to the hash key 
\&\f(CW\*(C`file_complete\*(C'\fR. Accepts a hash:
.Sp
.Vb 5
\&    connection(
\&        connect    => \*(Aq\*(Aq,  # Command to start a connection
\&        disconnect => \*(Aq\*(Aq,  # Command to disconnect
\&        reconnect  => \*(Aq\*(Aq   # Command to reconnect
\&    );
.Ve
.Sp
Either both \f(CW\*(C`connect\*(C'\fR and \f(CW\*(C`disconnect\*(C'\fR have to be specified, or \f(CW\*(C`reconnect\*(C'\fR 
has to be specified. If a single command can reconnect, then a value for 
\&\f(CW\*(C`reconnect\*(C'\fR will be apt, else \f(CW\*(C`connect\*(C'\fR and \f(CW\*(C`disconnect\*(C'\fR should be assigned 
the respective commands to connect and disconnect. The commands should be your 
operating system's commands to connect/disconnect/reconnect the internet 
connection.
.Sp
Windows users can use the rasdial utility to connect/disconnect: 
<http://technet.microsoft.com/en\-us/library/bb490979.aspx>.
.PP
Check \f(CW\*(C`download.pl\*(C'\fR file inside \f(CW\*(C`example\*(C'\fR directory for usage example of the 
module.
.SH "AUTHOR"
.IX Header "AUTHOR"
Alan Haggai Alavi, \f(CW\*(C`<alanhaggai at alanhaggai.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to 
\&\f(CW\*(C`bug\-www\-rapidshare\-free at rt.cpan.org\*(C'\fR, or through the web interface at 
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=WWW\-Rapidshare\-Free>. I will 
be notified, and then you will automatically be notified of progress on your 
bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc WWW::Rapidshare::Free
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT:\s0 \s-1CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=WWW\-Rapidshare\-Free>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/WWW\-Rapidshare\-Free>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/WWW\-Rapidshare\-Free>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/WWW\-Rapidshare\-Free/>
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2008 Alan Haggai Alavi, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
